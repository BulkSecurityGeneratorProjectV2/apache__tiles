~~ $Id$
~~
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~ http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~
Spring configuration

  The spring configuration is very simple. If you are already using Tiles with velocity you will only
  have to change the tilesConfigurer bean and the view resolver. Here is the code to do that:
  
+------------------------------------------+
...
	<bean id="tilesConfigurer" class="com.anydoby.tiles2.spring.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/config/tiles-defs.xml</value>
				... place here any number of tiles definition files...
			</list>
		</property>
	</bean>
...
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="order" value="1"></property>
		<property name="contentType" value="text/html; charset=utf-8"></property>
		<property name="toolboxConfigLocation" value="WEB-INF/config/velocity-toolbox.xml" />
		<property name="suffix" value=".tile" />
		<property name="viewClass" value="com.anydoby.tiles2.spring.VelocityTiles2View" />
	</bean>
...
+------------------------------------------+

  If you are not using velocity tools you can omit the toolboxConfigLocation. The integration layer
  project source contains a sample Spring Web MCV project which can be customized for your needs. You
  can use SVN to download it and build using <<<mvn package>>>. 